<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[iOS 3D touch]]></title>
      <url>/2017/05/09/iOS-3D-touch/</url>
      <content type="html"><![CDATA[<script src="/assets/js/DPlayer.min.js"> </script><p>简单介绍一下iOS中的3Dtouch. 一般开发中主要有三种情境使用:<br>icon的3Dtouch<br>应用内的预览<br>再就是可能游戏中会用到的按压力度的检测了</p>
<h2 id="icon的3D-touch"><a href="#icon的3D-touch" class="headerlink" title="icon的3D touch"></a>icon的3D touch</h2><h3 id="第一种方式-在info-plist中添加"><a href="#第一种方式-在info-plist中添加" class="headerlink" title="第一种方式: 在info.plist中添加"></a>第一种方式: 在info.plist中添加</h3><p><img src="http://oph74zx6j.bkt.clouddn.com/3Dtouch_infoplist.png" alt="3Dtouch with info.plist"></p>
<p>效果如下</p>
<p style="text-align:center;"><img src="http://oph74zx6j.bkt.clouddn.com/3Dtoucheffect.jpg" width="50%" height="50%"></p>

<p>解释一下其中的一些key的意思:<br><code>UIApplicationShortcutItemIconType</code> 是使用系统提供的图标, 目前提供了近30种图标<br><code>UIApplicationShortcutItemIconFile</code> 是 .xcassets 文件中自定义的图标<br><code>UIApplicationShortcutItemType</code> 是应用通过3Dtouch启动时传给应用内部的表示, 让内部代码知道点击的是哪个item.<br>其他的key显而易见, 不做解释.</p>
<p>那么接下来就是在代码中处理3Dtouch事件了:<br>1.首先应用第一次启动:</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> launchedShortcutItem: <span class="type">UIApplicationShortcutItem</span>?</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">application</span><span class="params">(<span class="number">_</span> application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplicationLaunchOptionsKey: Any]?)</span></span> -&gt; <span class="type">Bool</span> &#123;</div><div class="line">    <span class="keyword">if</span> <span class="keyword">let</span> shortcutItem = launchOptions?[<span class="type">UIApplicationLaunchOptionsKey</span>.shortcutItem] &#123;</div><div class="line">            launchedShortcutItem = shortcutItem <span class="keyword">as</span>? <span class="type">UIApplicationShortcutItem</span></div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="literal">true</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>2.应用已经启动, 并从后台3Dtouch启动:</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">application</span><span class="params">(<span class="number">_</span> application: UIApplication, </span></span></div><div class="line">                   performActionFor shortcutItem: UIApplicationShortcutItem, </div><div class="line">                   completionHandler: @escaping <span class="params">(Bool)</span> -&gt; <span class="type">Void</span>) &#123;</div><div class="line">                   </div><div class="line">    <span class="keyword">let</span> handleAction = handleShortcutItem(shortcutItem)</div><div class="line">    completionHandler(handleAction)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>通过以上两种方式都获取了shortcutItem的信息, 就可以进行相应的逻辑处理了.</p>
<h3 id="用代码动态添加shortcutItem"><a href="#用代码动态添加shortcutItem" class="headerlink" title="用代码动态添加shortcutItem"></a>用代码动态添加shortcutItem</h3><figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">let</span> item = <span class="type">UIApplicationShortcutItem</span>(type: <span class="string">"two"</span>,</div><div class="line">                                     localizedTitle: <span class="string">"Phoenix"</span>,</div><div class="line">                                     localizedSubtitle: <span class="string">"Make a Call"</span>,</div><div class="line">                                     icon: <span class="type">UIApplicationShortcutIcon</span>(type: .cloud),</div><div class="line">                                     userInfo: <span class="literal">nil</span>)</div><div class="line">        </div><div class="line"><span class="type">UIApplication</span>.shared.shortcutItems = [item]</div></pre></td></tr></table></figure>
<p>注意: 通过info.plist 和 代码添加的shortcutItem 并不冲突, 取并集, 但系统限制最多能够显示4个item, 因此会自动按顺序截取前4个.</p>
<h2 id="应用内预览"><a href="#应用内预览" class="headerlink" title="应用内预览"></a>应用内预览</h2><p>先看一下效果图</p>
<p style="text-align:center;"><img src="http://oph74zx6j.bkt.clouddn.com/3dtouchpeekpop.gif" width="50%" height="50%"></p>

<h3 id="peek-amp-pop"><a href="#peek-amp-pop" class="headerlink" title="peek &amp; pop"></a>peek &amp; pop</h3><p>peek是由一个能响应事件的view触发的, 需要在viewDidLoad中注册代理和来源视图:</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">override</span> <span class="function"><span class="keyword">func</span> <span class="title">viewDidLoad</span><span class="params">()</span></span> &#123;</div><div class="line">    <span class="keyword">super</span>.viewDidLoad()</div><div class="line">    <span class="keyword">self</span>.registerForPreviewing(with: <span class="keyword">self</span> <span class="keyword">as</span> <span class="type">UIViewControllerPreviewingDelegate</span>, sourceView: <span class="keyword">self</span>.view)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>然后是遵守协议和实现协议方法:</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">previewingContext</span><span class="params">(<span class="number">_</span> previewingContext: UIViewControllerPreviewing, viewControllerForLocation location: CGPoint)</span></span> -&gt; <span class="type">UIViewController</span>? &#123;</div><div class="line">    <span class="comment">// 返回目标控制器</span></div><div class="line">    <span class="keyword">let</span> indexPath = <span class="keyword">self</span>.tableView.indexPathForRow(at: location)</div><div class="line">    <span class="keyword">let</span> storyboard = <span class="type">UIStoryboard</span>(name: <span class="string">"Main"</span>, bundle: <span class="literal">nil</span>)</div><div class="line">    <span class="keyword">let</span> content = storyboard.instantiateViewController(withIdentifier: <span class="string">"ContentViewController"</span>) <span class="keyword">as</span>! <span class="type">ContentViewController</span></div><div class="line">    <span class="keyword">guard</span> indexPath != <span class="literal">nil</span> <span class="keyword">else</span> &#123;</div><div class="line">        <span class="keyword">return</span> <span class="literal">nil</span></div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> content</div><div class="line">&#125;</div><div class="line">    </div><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">previewingContext</span><span class="params">(<span class="number">_</span> previewingContext: UIViewControllerPreviewing, commit viewControllerToCommit: UIViewController)</span></span> &#123;</div><div class="line">    <span class="keyword">self</span>.showDetailViewController(viewControllerToCommit, sender: <span class="keyword">self</span>)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="peek-quick-actions"><a href="#peek-quick-actions" class="headerlink" title="peek quick actions"></a>peek quick actions</h3><p>在目标控制器实现以下方法:</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">override</span> <span class="keyword">var</span> previewActionItems: [<span class="type">UIPreviewActionItem</span>] &#123;</div><div class="line">    <span class="keyword">let</span> action = <span class="type">UIPreviewAction</span>(title: <span class="string">"Save"</span>, style: .<span class="keyword">default</span>) &#123; (action: <span class="type">UIPreviewAction</span>, controller: <span class="type">UIViewController</span>) <span class="keyword">in</span></div><div class="line">        <span class="built_in">print</span>(<span class="string">"Save image"</span>)</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> [action]</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="按压力度监听"><a href="#按压力度监听" class="headerlink" title="按压力度监听"></a>按压力度监听</h2><p>实现了一个小demo</p>
<p></p><p style="text-align:center;"><img src="http://oph74zx6j.bkt.clouddn.com/3dtouchweigh.gif" width="50%" height="50%"></p><br>代码如下:<p></p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">override</span> <span class="function"><span class="keyword">func</span> <span class="title">touchesBegan</span><span class="params">(<span class="number">_</span> touches: Set&lt;UITouch&gt;, with event: UIEvent?)</span></span> &#123;</div><div class="line">    <span class="keyword">let</span> touch = touches.first</div><div class="line">    <span class="keyword">self</span>.centerPoint = touch?.location(<span class="keyword">in</span>: touch?.view)</div><div class="line">&#125;</div><div class="line">    </div><div class="line"><span class="keyword">override</span> <span class="function"><span class="keyword">func</span> <span class="title">touchesMoved</span><span class="params">(<span class="number">_</span> touches: Set&lt;UITouch&gt;, with event: UIEvent?)</span></span> &#123;</div><div class="line">    <span class="keyword">let</span> touch = touches.first</div><div class="line">    <span class="keyword">let</span> force = touch?.force</div><div class="line">    <span class="keyword">let</span> maximumPossibleForce = touch?.maximumPossibleForce</div><div class="line">    <span class="keyword">let</span> quotient = force! / maximumPossibleForce!</div><div class="line">    <span class="keyword">let</span> border = <span class="keyword">self</span>.view.frame.size.width</div><div class="line">    <span class="keyword">self</span>.round.layer.cornerRadius = border * <span class="number">0.5</span> * quotient</div><div class="line">    <span class="keyword">self</span>.round.frame = <span class="type">CGRect</span>(x: <span class="number">0</span>, y: <span class="number">0</span>, width: border * quotient, height: border * quotient)</div><div class="line">    <span class="keyword">let</span> point = touch?.location(<span class="keyword">in</span>: touch?.view)</div><div class="line">    <span class="keyword">self</span>.round.center = point!</div><div class="line">        </div><div class="line">    <span class="keyword">let</span> weight = <span class="number">415</span> * quotient</div><div class="line">    <span class="keyword">self</span>.weightLabel.text = <span class="string">"<span class="subst">\(weight)</span> g"</span></div><div class="line">&#125;</div><div class="line">    </div><div class="line"><span class="keyword">override</span> <span class="function"><span class="keyword">func</span> <span class="title">touchesEnded</span><span class="params">(<span class="number">_</span> touches: Set&lt;UITouch&gt;, with event: UIEvent?)</span></span> &#123;</div><div class="line">    <span class="keyword">self</span>.round.frame = <span class="type">CGRect</span>.zero</div><div class="line">    <span class="keyword">self</span>.weightLabel.text = <span class="string">"0 g"</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><a href="https://github.com/Asura19/My30DaysOfSwift/tree/master/3DTouch" target="_blank" rel="external">本文完整demo</a> (3Dtouch不支持模拟器, 请以真机调试)</p>
<p>__原创文章, 转载请注明出处</p>
]]></content>
      
        
        <tags>
            
            <tag> iOS </tag>
            
            <tag> Swift </tag>
            
            <tag> 3Dtouch </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>/2017/05/05/hello-world/</url>
      <content type="html"><![CDATA[<script src="/assets/js/DPlayer.min.js"> </script><p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<video src="http://ws.acgvideo.com/2/02/5401528-1hd.mp4?wsTime=1494415669&platform=pc&wsSecret2=591fb19800de18c4a6c323047c4ff84e&oi=736108944&rate=7" type="video/mp4" preload="auto" poster="https://www.pmtonline.co.uk/yoma_press/wp-content/uploads/2014/11/21_foofighters_lg.jpg" controls="controls" width="100%" height="100%"><br></video>

<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
<p><img src="http://oph74zx6j.bkt.clouddn.com/swift.png" alt="Swift"></p>
]]></content>
      
        
    </entry>
    
  
  
</search>
